---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: rke1clusters.rke1.rancher.crossplane.io
spec:
  group: rke1.rancher.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - rancher
    kind: RKE1Cluster
    listKind: RKE1ClusterList
    plural: rke1clusters
    singular: rke1cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Cluster is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ClusterSpec defines the desired state of a Cluster.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ClusterParameters are the configurable fields of a Cluster.
                properties:
                  kubeconfigSecretNamespace:
                    type: string
                  nodePools:
                    items:
                      description: RKENodePoolSpec defines the desired state of RKENodePool
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        baseType:
                          type: string
                        clusterId:
                          type: string
                        controlPlane:
                          type: boolean
                        deleteNotReadyAfterSecs:
                          format: int64
                          type: integer
                        drainBeforeDelete:
                          type: boolean
                        driver:
                          type: string
                        etcd:
                          type: boolean
                        hostnamePrefix:
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        nodeTemplateId:
                          type: string
                        nodeTemplateIdRef:
                          type: string
                        quantity:
                          format: int64
                          type: integer
                        worker:
                          type: boolean
                      type: object
                    type: array
                  region:
                    type: string
                  rke:
                    description: RKEClusterConfigSpec defines the desired state of
                      RKEClusterConfig
                    properties:
                      dockerRootDir:
                        type: string
                      enableClusterAlerting:
                        type: boolean
                      enableClusterMonitoring:
                        type: boolean
                      enableNetworkPolicy:
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      localClusterAuthEndpoint:
                        description: localClusterAuthEndpoint is the local cluster
                          auth endpoint.
                        properties:
                          enabled:
                            type: boolean
                          fqdn:
                            type: string
                        type: object
                      name:
                        type: string
                      rancherKubernetesEngineConfig:
                        properties:
                          addonJobTimeout:
                            description: Timeout in seconds for status check on addon
                              deployment jobs
                            type: integer
                          addons:
                            description: YAML manifest for user provided addons to
                              be deployed on the cluster
                            type: string
                          addonsInclude:
                            description: List of urls or paths for addons
                            items:
                              type: string
                            type: array
                          authentication:
                            description: 'Authentication configuration used in the
                              cluster (default: x509)'
                            properties:
                              sans:
                                description: List of additional hostnames and IPs
                                  to include in the api server PKI cert
                                items:
                                  type: string
                                type: array
                              strategy:
                                description: Authentication strategy that will be
                                  used in kubernetes cluster
                                type: string
                              webhook:
                                description: Webhook configuration options
                                properties:
                                  cacheTimeout:
                                    description: CacheTimeout controls how long to
                                      cache authentication decisions
                                    type: string
                                  configFile:
                                    description: ConfigFile is a multiline string
                                      that represent a custom webhook config file
                                    type: string
                                type: object
                            type: object
                          authorization:
                            description: Authorization mode configuration used in
                              the cluster
                            properties:
                              mode:
                                description: Authorization mode used by kubernetes
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: Authorization mode options
                                type: object
                            type: object
                          bastionHost:
                            description: Bastion/Jump Host configuration
                            properties:
                              address:
                                description: Address of Bastion Host
                                type: string
                              ignoreProxyEnvVars:
                                description: Ignore proxy environment variables
                                type: boolean
                              port:
                                description: SSH Port of Bastion Host
                                type: string
                              sshAgentAuth:
                                description: SSH Agent Auth enable
                                type: boolean
                              sshCert:
                                description: SSH Certificate
                                type: string
                              sshCertPath:
                                description: SSH Certificate Path
                                type: string
                              sshKey:
                                description: SSH Private Key
                                type: string
                              sshKeyPath:
                                description: SSH Private Key Path
                                type: string
                              user:
                                description: ssh User to Bastion Host
                                type: string
                            type: object
                          cloudProvider:
                            description: Cloud Provider options
                            properties:
                              awsCloudProvider:
                                description: AWSCloudProvider
                                properties:
                                  global:
                                    properties:
                                      disable-security-group-ingress:
                                        description: "The aws provider creates an
                                          inbound rule per load balancer on the node
                                          security group. However, this can run into
                                          the AWS security group rule limit of 50
                                          if many LoadBalancers are created. \n This
                                          flag disables the automatic ingress creation.
                                          It requires that the user has setup a rule
                                          that allows inbound traffic on kubelet ports
                                          from the local VPC subnet (so load balancers
                                          can access it). E.g. 10.82.0.0/16 30000-32000."
                                        type: boolean
                                      disable-strict-zone-check:
                                        description: "During the instantiation of
                                          an new AWS cloud provider, the detected
                                          region is validated against a known set
                                          of regions. \n In a non-standard, AWS like
                                          environment (e.g. Eucalyptus), this check
                                          may be undesirable.  Setting this to true
                                          will disable the check and provide a warning
                                          that the check was skipped.  Please note
                                          that this is an experimental feature and
                                          work-in-progress for the moment.  If you
                                          find yourself in an non-AWS cloud and open
                                          an issue, please indicate that in the issue
                                          body."
                                        type: boolean
                                      elb-security-group:
                                        description: AWS has a hard limit of 500 security
                                          groups. For large clusters creating a security
                                          group for each ELB can cause the max number
                                          of security groups to be reached. If this
                                          is set instead of creating a new Security
                                          group for each ELB this security group will
                                          be used instead.
                                        type: string
                                      kubernetes-cluster-id:
                                        description: KubernetesClusterID is the cluster
                                          id we'll use to identify our cluster resources
                                        type: string
                                      kubernetes-cluster-tag:
                                        description: KubernetesClusterTag is the legacy
                                          cluster id we'll use to identify our cluster
                                          resources
                                        type: string
                                      role-arn:
                                        description: RoleARN is the IAM role to assume
                                          when interaction with AWS APIs.
                                        type: string
                                      routetable-id:
                                        description: RouteTableID enables using a
                                          specific RouteTable
                                        type: string
                                      subnet-id:
                                        description: SubnetID enables using a specific
                                          subnet to use for ELB's
                                        type: string
                                      vpc:
                                        description: The AWS VPC flag enables the
                                          possibility to run the master components
                                          on a different aws account, on a different
                                          cloud provider or on-premises. If the flag
                                          is set also the KubernetesClusterTag must
                                          be provided
                                        type: string
                                      zone:
                                        description: 'TODO: Is there any use for this?  We
                                          can get it from the instance metadata service
                                          Maybe if we''re not running on AWS, e.g.
                                          bootstrap; for now it is not very useful'
                                        type: string
                                    required:
                                    - disable-security-group-ingress
                                    - disable-strict-zone-check
                                    - elb-security-group
                                    - kubernetes-cluster-id
                                    - kubernetes-cluster-tag
                                    - role-arn
                                    - routetable-id
                                    - subnet-id
                                    - vpc
                                    - zone
                                    type: object
                                  serviceOverride:
                                    additionalProperties:
                                      properties:
                                        region:
                                          type: string
                                        service:
                                          type: string
                                        signing-method:
                                          type: string
                                        signing-name:
                                          type: string
                                        signing-region:
                                          type: string
                                        url:
                                          type: string
                                      required:
                                      - region
                                      - service
                                      - signing-method
                                      - signing-name
                                      - signing-region
                                      - url
                                      type: object
                                    type: object
                                required:
                                - global
                                type: object
                              azureCloudProvider:
                                description: AzureCloudProvider
                                properties:
                                  aadClientCertPassword:
                                    description: 'The password of the client certificate
                                      for an AAD application with RBAC access to talk
                                      to Azure RM APIs This''s used for client certificate
                                      authentication: https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-service-to-service'
                                    type: string
                                  aadClientCertPath:
                                    description: 'The path of a client certificate
                                      for an AAD application with RBAC access to talk
                                      to Azure RM APIs This''s used for client certificate
                                      authentication: https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-service-to-service'
                                    type: string
                                  aadClientId:
                                    description: 'The ClientID for an AAD application
                                      with RBAC access to talk to Azure RM APIs This''s
                                      used for service principal authentication: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md'
                                    type: string
                                  aadClientSecret:
                                    description: 'The ClientSecret for an AAD application
                                      with RBAC access to talk to Azure RM APIs This''s
                                      used for service principal authentication: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md'
                                    type: string
                                  cloud:
                                    description: The cloud environment identifier.
                                      Takes values from https://github.com/Azure/go-autorest/blob/ec5f4903f77ed9927ac95b19ab8e44ada64c1356/autorest/azure/environments.go#L13
                                    type: string
                                  cloudProviderBackoff:
                                    description: Enable exponential backoff to manage
                                      resource request retries
                                    type: boolean
                                  cloudProviderBackoffDuration:
                                    description: Backoff duration
                                    type: integer
                                  cloudProviderBackoffExponent:
                                    description: Backoff exponent
                                    type: integer
                                  cloudProviderBackoffJitter:
                                    description: Backoff jitter
                                    type: integer
                                  cloudProviderBackoffRetries:
                                    description: Backoff retry limit
                                    type: integer
                                  cloudProviderRateLimit:
                                    description: Enable rate limiting
                                    type: boolean
                                  cloudProviderRateLimitBucket:
                                    description: Rate limit Bucket Size
                                    type: integer
                                  cloudProviderRateLimitQPS:
                                    description: Rate limit QPS
                                    type: integer
                                  excludeMasterFromStandardLB:
                                    description: Excludes master nodes (labeled with
                                      `node-role.kubernetes.io/master`) from the backend
                                      pool of Azure standard loadbalancer, default(nil)
                                      to `true` If want adding the master nodes to
                                      ALB, this should be set to `false` and remove
                                      the `node-role.kubernetes.io/master` label from
                                      master nodes
                                    type: boolean
                                  loadBalancerSku:
                                    description: 'Sku of Load Balancer and Public
                                      IP: `basic` or `standard`, default(blank) to
                                      `basic`'
                                    type: string
                                  location:
                                    description: The location of the resource group
                                      that the cluster is deployed in
                                    type: string
                                  maximumLoadBalancerRuleCount:
                                    description: Maximum allowed LoadBalancer Rule
                                      Count is the limit enforced by Azure Load balancer,
                                      default(0) to 148
                                    type: integer
                                  primaryAvailabilitySetName:
                                    description: (Optional) The name of the availability
                                      set that should be used as the load balancer
                                      backend If this is set, the Azure cloudprovider
                                      will only add nodes from that availability set
                                      to the load balancer backend pool. If this is
                                      not set, and multiple agent pools (availability
                                      sets) are used, then the cloudprovider will
                                      try to add all nodes to a single backend pool
                                      which is forbidden. In other words, if you use
                                      multiple agent pools (availability sets), you
                                      MUST set this field.
                                    type: string
                                  primaryScaleSetName:
                                    description: The name of the scale set that should
                                      be used as the load balancer backend. If this
                                      is set, the Azure cloudprovider will only add
                                      nodes from that scale set to the load balancer
                                      backend pool. If this is not set, and multiple
                                      agent pools (scale sets) are used, then the
                                      cloudprovider will try to add all nodes to a
                                      single backend pool which is forbidden. In other
                                      words, if you use multiple agent pools (scale
                                      sets), you MUST set this field.
                                    type: string
                                  resourceGroup:
                                    description: The name of the resource group that
                                      the cluster is deployed in
                                    type: string
                                  routeTableName:
                                    description: (Optional in 1.6) The name of the
                                      route table attached to the subnet that the
                                      cluster is deployed in
                                    type: string
                                  securityGroupName:
                                    description: The name of the security group attached
                                      to the cluster's subnet
                                    type: string
                                  securityGroupResourceGroup:
                                    description: The name of the resource group that
                                      the security group is deployed in
                                    type: string
                                  subnetName:
                                    description: The name of the subnet that the cluster
                                      is deployed in
                                    type: string
                                  subscriptionId:
                                    description: The ID of the Azure Subscription
                                      that the cluster is deployed in
                                    type: string
                                  tags:
                                    description: 'Tags to be added to shared resources:
                                      `foo=bar,bar=foo`'
                                    type: string
                                  tenantId:
                                    description: The AAD Tenant ID for the Subscription
                                      that the cluster is deployed in
                                    type: string
                                  useInstanceMetadata:
                                    description: Use instance metadata service where
                                      possible
                                    type: boolean
                                  useManagedIdentityExtension:
                                    description: 'Use managed service identity for
                                      the virtual machine to access Azure ARM APIs
                                      This''s used for managed identity authentication:
                                      https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview
                                      For user-assigned managed identity, need to
                                      set the below UserAssignedIdentityID'
                                    type: boolean
                                  userAssignedIdentityID:
                                    description: 'The Client ID of the user assigned
                                      MSI which is assigned to the underlying VMs
                                      This''s used for managed identity authentication:
                                      https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview'
                                    type: string
                                  vmType:
                                    description: 'The type of azure nodes. Candidate
                                      valudes are: vmss and standard. If not set,
                                      it will be default to standard.'
                                    type: string
                                  vnetName:
                                    description: The name of the VNet that the cluster
                                      is deployed in
                                    type: string
                                  vnetResourceGroup:
                                    description: The name of the resource group that
                                      the Vnet is deployed in
                                    type: string
                                required:
                                - aadClientCertPassword
                                - aadClientCertPath
                                - aadClientId
                                - aadClientSecret
                                - cloud
                                - cloudProviderBackoff
                                - cloudProviderBackoffDuration
                                - cloudProviderBackoffExponent
                                - cloudProviderBackoffJitter
                                - cloudProviderBackoffRetries
                                - cloudProviderRateLimit
                                - cloudProviderRateLimitBucket
                                - cloudProviderRateLimitQPS
                                - location
                                - maximumLoadBalancerRuleCount
                                - primaryAvailabilitySetName
                                - primaryScaleSetName
                                - resourceGroup
                                - routeTableName
                                - securityGroupName
                                - subnetName
                                - subscriptionId
                                - tenantId
                                - useInstanceMetadata
                                - useManagedIdentityExtension
                                - vmType
                                - vnetName
                                - vnetResourceGroup
                                type: object
                              customCloudProvider:
                                description: CustomCloudProvider is a multiline string
                                  that represent a custom cloud config file
                                type: string
                              harvesterCloudProvider:
                                description: HarvesterCloudProvider
                                properties:
                                  cloudConfig:
                                    type: string
                                required:
                                - cloudConfig
                                type: object
                              name:
                                description: Name of the Cloud Provider
                                type: string
                              openstackCloudProvider:
                                description: OpenstackCloudProvider
                                properties:
                                  blockStorage:
                                    properties:
                                      bs-version:
                                        type: string
                                      ignore-volume-az:
                                        type: boolean
                                      trust-device-path:
                                        type: boolean
                                    required:
                                    - bs-version
                                    - ignore-volume-az
                                    - trust-device-path
                                    type: object
                                  global:
                                    properties:
                                      auth-url:
                                        type: string
                                      ca-file:
                                        type: string
                                      domain-id:
                                        type: string
                                      domain-name:
                                        type: string
                                      password:
                                        type: string
                                      region:
                                        type: string
                                      tenant-id:
                                        type: string
                                      tenant-name:
                                        type: string
                                      trust-id:
                                        type: string
                                      user-id:
                                        type: string
                                      username:
                                        type: string
                                    required:
                                    - auth-url
                                    - ca-file
                                    - domain-id
                                    - domain-name
                                    - password
                                    - region
                                    - tenant-id
                                    - tenant-name
                                    - trust-id
                                    - user-id
                                    - username
                                    type: object
                                  loadBalancer:
                                    properties:
                                      create-monitor:
                                        type: boolean
                                      floating-network-id:
                                        type: string
                                      lb-method:
                                        type: string
                                      lb-provider:
                                        type: string
                                      lb-version:
                                        type: string
                                      manage-security-groups:
                                        type: boolean
                                      monitor-delay:
                                        type: string
                                      monitor-max-retries:
                                        type: integer
                                      monitor-timeout:
                                        type: string
                                      subnet-id:
                                        type: string
                                      use-octavia:
                                        type: boolean
                                    required:
                                    - create-monitor
                                    - floating-network-id
                                    - lb-method
                                    - lb-provider
                                    - lb-version
                                    - manage-security-groups
                                    - monitor-delay
                                    - monitor-max-retries
                                    - monitor-timeout
                                    - subnet-id
                                    - use-octavia
                                    type: object
                                  metadata:
                                    properties:
                                      request-timeout:
                                        type: integer
                                      search-order:
                                        type: string
                                    required:
                                    - request-timeout
                                    - search-order
                                    type: object
                                  route:
                                    properties:
                                      router-id:
                                        type: string
                                    required:
                                    - router-id
                                    type: object
                                required:
                                - blockStorage
                                - global
                                - loadBalancer
                                - metadata
                                - route
                                type: object
                              vsphereCloudProvider:
                                description: VsphereCloudProvider
                                properties:
                                  disk:
                                    properties:
                                      scsicontrollertype:
                                        type: string
                                    type: object
                                  global:
                                    properties:
                                      datacenter:
                                        type: string
                                      datacenters:
                                        type: string
                                      datastore:
                                        type: string
                                      insecure-flag:
                                        type: boolean
                                      password:
                                        type: string
                                      port:
                                        type: string
                                      server:
                                        type: string
                                      soap-roundtrip-count:
                                        type: integer
                                      user:
                                        type: string
                                      vm-name:
                                        type: string
                                      vm-uuid:
                                        type: string
                                      working-dir:
                                        type: string
                                    type: object
                                  network:
                                    properties:
                                      public-network:
                                        type: string
                                    type: object
                                  virtualCenter:
                                    additionalProperties:
                                      properties:
                                        datacenters:
                                          type: string
                                        password:
                                          type: string
                                        port:
                                          type: string
                                        soap-roundtrip-count:
                                          type: integer
                                        user:
                                          type: string
                                      type: object
                                    type: object
                                  workspace:
                                    properties:
                                      datacenter:
                                        type: string
                                      default-datastore:
                                        type: string
                                      folder:
                                        type: string
                                      resourcepool-path:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          clusterName:
                            description: Cluster Name used in the kube config
                            type: string
                          dns:
                            description: DNS Config
                            properties:
                              linearAutoscalerParams:
                                description: Autoscaler fields to determine number
                                  of dns replicas
                                properties:
                                  coresPerReplica:
                                    type: string
                                  max:
                                    type: integer
                                  min:
                                    type: integer
                                  nodesPerReplica:
                                    type: string
                                  preventSinglePointFailure:
                                    type: boolean
                                type: object
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector key pair
                                type: object
                              nodelocal:
                                description: Nodelocal DNS
                                properties:
                                  ipAddress:
                                    description: link-local IP for nodelocal DNS
                                    type: string
                                  nodeLocalDnsPriorityClassName:
                                    description: Priority class name for NodeLocal's
                                      "node-local-dns" daemonset
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: NodeSelector key pair
                                    type: object
                                  updateStrategy:
                                    description: Nodelocal DNS daemonset upgrade strategy
                                    properties:
                                      rollingUpdate:
                                        description: 'Rolling update config params.
                                          Present only if type = "RollingUpdate".
                                          --- TODO: Update this to follow our convention
                                          for oneOf, whatever we decide it to be.
                                          Same as Deployment `strategy.rollingUpdate`.
                                          See https://github.com/kubernetes/kubernetes/issues/35345'
                                        properties:
                                          maxSurge:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: 'The maximum number of nodes
                                              with an existing available DaemonSet
                                              pod that can have an updated DaemonSet
                                              pod during during an update. Value can
                                              be an absolute number (ex: 5) or a percentage
                                              of desired pods (ex: 10%). This can
                                              not be 0 if MaxUnavailable is 0. Absolute
                                              number is calculated from percentage
                                              by rounding up to a minimum of 1. Default
                                              value is 0. Example: when this is set
                                              to 30%, at most 30% of the total number
                                              of nodes that should be running the
                                              daemon pod (i.e. status.desiredNumberScheduled)
                                              can have their a new pod created before
                                              the old pod is marked as deleted. The
                                              update starts by launching new pods
                                              on 30% of nodes. Once an updated pod
                                              is available (Ready for at least minReadySeconds)
                                              the old DaemonSet pod on that node is
                                              marked deleted. If the old pod becomes
                                              unavailable for any reason (Ready transitions
                                              to false, is evicted, or is drained)
                                              an updated pod is immediatedly created
                                              on that node without considering surge
                                              limits. Allowing surge implies the possibility
                                              that the resources consumed by the daemonset
                                              on any given node can double if the
                                              readiness check fails, and so resource
                                              intensive daemonsets should take into
                                              account that they may cause evictions
                                              during disruption.'
                                            x-kubernetes-int-or-string: true
                                          maxUnavailable:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: 'The maximum number of DaemonSet
                                              pods that can be unavailable during
                                              the update. Value can be an absolute
                                              number (ex: 5) or a percentage of total
                                              number of DaemonSet pods at the start
                                              of the update (ex: 10%). Absolute number
                                              is calculated from percentage by rounding
                                              up. This cannot be 0 if MaxSurge is
                                              0 Default value is 1. Example: when
                                              this is set to 30%, at most 30% of the
                                              total number of nodes that should be
                                              running the daemon pod (i.e. status.desiredNumberScheduled)
                                              can have their pods stopped for an update
                                              at any given time. The update starts
                                              by stopping at most 30% of those DaemonSet
                                              pods and then brings up new DaemonSet
                                              pods in their place. Once the new pods
                                              are available, it then proceeds onto
                                              other DaemonSet pods, thus ensuring
                                              that at least 70% of original number
                                              of DaemonSet pods are available at all
                                              times during the update.'
                                            x-kubernetes-int-or-string: true
                                        type: object
                                      strategy:
                                        description: Type of daemon set update. Can
                                          be "RollingUpdate" or "OnDelete". Default
                                          is RollingUpdate.
                                        type: string
                                    type: object
                                type: object
                              options:
                                additionalProperties:
                                  type: string
                                description: DNS config options
                                type: object
                              provider:
                                description: DNS provider
                                type: string
                              reversecidrs:
                                description: ReverseCIDRs
                                items:
                                  type: string
                                type: array
                              stubdomains:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Stubdomains
                                type: object
                              tolerations:
                                description: Tolerations for Deployments
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              updateStrategy:
                                description: Update strategy
                                properties:
                                  rollingUpdate:
                                    description: 'Rolling update config params. Present
                                      only if DeploymentStrategyType = RollingUpdate.
                                      --- TODO: Update this to follow our convention
                                      for oneOf, whatever we decide it to be.'
                                    properties:
                                      maxSurge:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of pods that
                                          can be scheduled above the desired number
                                          of pods. Value can be an absolute number
                                          (ex: 5) or a percentage of desired pods
                                          (ex: 10%). This can not be 0 if MaxUnavailable
                                          is 0. Absolute number is calculated from
                                          percentage by rounding up. Defaults to 25%.
                                          Example: when this is set to 30%, the new
                                          ReplicaSet can be scaled up immediately
                                          when the rolling update starts, such that
                                          the total number of old and new pods do
                                          not exceed 130% of desired pods. Once old
                                          pods have been killed, new ReplicaSet can
                                          be scaled up further, ensuring that total
                                          number of pods running at any time during
                                          the update is at most 130% of desired pods.'
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of pods that
                                          can be unavailable during the update. Value
                                          can be an absolute number (ex: 5) or a percentage
                                          of desired pods (ex: 10%). Absolute number
                                          is calculated from percentage by rounding
                                          down. This can not be 0 if MaxSurge is 0.
                                          Defaults to 25%. Example: when this is set
                                          to 30%, the old ReplicaSet can be scaled
                                          down to 70% of desired pods immediately
                                          when the rolling update starts. Once new
                                          pods are ready, old ReplicaSet can be scaled
                                          down further, followed by scaling up the
                                          new ReplicaSet, ensuring that the total
                                          number of pods available at all times during
                                          the update is at least 70% of desired pods.'
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  strategy:
                                    description: Type of deployment. Can be "Recreate"
                                      or "RollingUpdate". Default is RollingUpdate.
                                    type: string
                                type: object
                              upstreamnameservers:
                                description: Upstream nameservers
                                items:
                                  type: string
                                type: array
                            type: object
                          enableCriDockerd:
                            description: Enable/disable using cri-dockerd
                            type: boolean
                          ignoreDockerVersion:
                            description: Enable/disable strict docker version checking
                            type: boolean
                          ingress:
                            description: Ingress controller used in the cluster
                            properties:
                              defaultBackend:
                                description: Enable or disable nginx default-http-backend
                                type: boolean
                              defaultHttpBackendPriorityClassName:
                                description: Priority class name for Nginx-Ingress's
                                  "default-http-backend" deployment
                                type: string
                              defaultIngressClass:
                                description: Enable or disable nginx default-http-backend
                                type: boolean
                              dnsPolicy:
                                description: DNS Policy
                                type: string
                              extraArgs:
                                additionalProperties:
                                  type: string
                                description: Ingress controller extra arguments
                                type: object
                              extraEnvs:
                                description: Extra Env vars
                                items:
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              extraVolumeMounts:
                                description: Extra volume mounts
                                items:
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              extraVolumes:
                                description: Extra volumes
                                items:
                                  properties:
                                    awsElasticBlockStore:
                                      description: 'awsElasticBlockStore represents
                                        an AWS Disk resource that is attached to a
                                        kubelet''s host machine and then exposed to
                                        the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly value true will force
                                            the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'volumeID is unique ID of the
                                            persistent disk resource in AWS (Amazon
                                            EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: azureDisk represents an Azure Data
                                        Disk mount on the host and bind mount to the
                                        pod.
                                      properties:
                                        cachingMode:
                                          description: 'cachingMode is the Host Caching
                                            mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          description: fsType is Filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: 'kind expected values are Shared:
                                            multiple blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: azureFile represents an Azure File
                                        Service mount on the host and bind mount to
                                        the pod.
                                      properties:
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: cephFS represents a Ceph FS mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        monitors:
                                          description: 'monitors is Required: Monitors
                                            is a collection of Ceph monitors More
                                            info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'secretFile is Optional: SecretFile
                                            is the path to key ring for User, default
                                            is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'secretRef is Optional: SecretRef
                                            is reference to the authentication secret
                                            for User, default is empty. More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: 'user is optional: User is
                                            the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: 'cinder represents a cinder volume
                                        attached and mounted on kubelets host machine.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Examples:
                                            "ext4", "xfs", "ntfs". Implicitly inferred
                                            to be "ext4" if unspecified. More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is optional: points
                                            to a secret object containing parameters
                                            used to connect to OpenStack.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeID:
                                          description: 'volumeID used to identify
                                            the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers (Beta feature).
                                      properties:
                                        driver:
                                          description: driver is the name of the CSI
                                            driver that handles this volume. Consult
                                            with your admin for the correct name as
                                            registered in the cluster.
                                          type: string
                                        fsType:
                                          description: fsType to mount. Ex. "ext4",
                                            "xfs", "ntfs". If not provided, the empty
                                            value is passed to the associated CSI
                                            driver which will determine the default
                                            filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: nodePublishSecretRef is a reference
                                            to the secret object containing sensitive
                                            information to pass to the CSI driver
                                            to complete the CSI NodePublishVolume
                                            and NodeUnpublishVolume calls. This field
                                            is optional, and  may be empty if no secret
                                            is required. If the secret object contains
                                            more than one secret, all secret references
                                            are passed.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        readOnly:
                                          description: readOnly specifies a read-only
                                            configuration for the volume. Defaults
                                            to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: volumeAttributes stores driver-specific
                                            properties that are passed to the CSI
                                            driver. Consult your driver's documentation
                                            for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use
                                            on created files by default. Must be a
                                            Optional: mode bits used to set permissions
                                            on created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Defaults to 0644. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file, must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  requests.cpu and requests.memory)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                            - path
                                            type: object
                                          type: array
                                      type: object
                                    emptyDir:
                                      description: 'emptyDir represents a temporary
                                        directory that shares a pod''s lifetime. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      properties:
                                        medium:
                                          description: 'medium represents what type
                                            of storage medium should back this directory.
                                            The default is "" which means to use the
                                            node''s default medium. Must be an empty
                                            string (default) or Memory. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: 'sizeLimit is the total amount
                                            of local storage required for this EmptyDir
                                            volume. The size limit is also applicable
                                            for memory medium. The maximum usage on
                                            memory medium EmptyDir would be the minimum
                                            value between the SizeLimit specified
                                            here and the sum of memory limits of all
                                            containers in a pod. The default is nil
                                            which means that the limit is undefined.
                                            More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: "ephemeral represents a volume
                                        that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod
                                        that defines it - it will be created before
                                        the pod starts, and deleted when the pod is
                                        removed. \n Use this if: a) the volume is
                                        only needed while the pod runs, b) features
                                        of normal volumes like restoring from snapshot
                                        or capacity tracking are needed, c) the storage
                                        driver is specified through a storage class,
                                        and d) the storage driver supports dynamic
                                        volume provisioning through a PersistentVolumeClaim
                                        (see EphemeralVolumeSource for more information
                                        on the connection between this volume type
                                        and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                        or one of the vendor-specific APIs for volumes
                                        that persist for longer than the lifecycle
                                        of an individual pod. \n Use CSI for light-weight
                                        local ephemeral volumes if the CSI driver
                                        is meant to be used that way - see the documentation
                                        of the driver for more information. \n A pod
                                        can use both types of ephemeral volumes and
                                        persistent volumes at the same time."
                                      properties:
                                        volumeClaimTemplate:
                                          description: "Will be used to create a stand-alone
                                            PVC to provision the volume. The pod in
                                            which this EphemeralVolumeSource is embedded
                                            will be the owner of the PVC, i.e. the
                                            PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod
                                            name>-<volume name>` where `<volume name>`
                                            is the name from the `PodSpec.Volumes`
                                            array entry. Pod validation will reject
                                            the pod if the concatenated name is not
                                            valid for a PVC (for example, too long).
                                            \n An existing PVC with that name that
                                            is not owned by the pod will *not* be
                                            used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is
                                            then blocked until the unrelated PVC is
                                            removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has
                                            to updated with an owner reference to
                                            the pod once the pod exists. Normally
                                            this should not be necessary, but it may
                                            be useful when manually reconstructing
                                            a broken cluster. \n This field is read-only
                                            and no changes will be made by Kubernetes
                                            to the PVC after it has been created.
                                            \n Required, must not be nil."
                                          properties:
                                            metadata:
                                              description: May contain labels and
                                                annotations that will be copied into
                                                the PVC when creating it. No other
                                                fields are allowed and will be rejected
                                                during validation.
                                              type: object
                                            spec:
                                              description: The specification for the
                                                PersistentVolumeClaim. The entire
                                                content is copied unchanged into the
                                                PVC that gets created from this template.
                                                The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: 'accessModes contains
                                                    the desired access modes the volume
                                                    should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                  items:
                                                    type: string
                                                  type: array
                                                dataSource:
                                                  description: 'dataSource field can
                                                    be used to specify either: * An
                                                    existing VolumeSnapshot object
                                                    (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external
                                                    controller can support the specified
                                                    data source, it will create a
                                                    new volume based on the contents
                                                    of the specified data source.
                                                    When the AnyVolumeDataSource feature
                                                    gate is enabled, dataSource contents
                                                    will be copied to dataSourceRef,
                                                    and dataSourceRef contents will
                                                    be copied to dataSource when dataSourceRef.namespace
                                                    is not specified. If the namespace
                                                    is specified, then dataSourceRef
                                                    will not be copied to dataSource.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                dataSourceRef:
                                                  description: 'dataSourceRef specifies
                                                    the object from which to populate
                                                    the volume with data, if a non-empty
                                                    volume is desired. This may be
                                                    any object from a non-empty API
                                                    group (non core object) or a PersistentVolumeClaim
                                                    object. When this field is specified,
                                                    volume binding will only succeed
                                                    if the type of the specified object
                                                    matches some installed volume
                                                    populator or dynamic provisioner.
                                                    This field will replace the functionality
                                                    of the dataSource field and as
                                                    such if both fields are non-empty,
                                                    they must have the same value.
                                                    For backwards compatibility, when
                                                    namespace isn''t specified in
                                                    dataSourceRef, both fields (dataSource
                                                    and dataSourceRef) will be set
                                                    to the same value automatically
                                                    if one of them is empty and the
                                                    other is non-empty. When namespace
                                                    is specified in dataSourceRef,
                                                    dataSource isn''t set to the same
                                                    value and must be empty. There
                                                    are three important differences
                                                    between dataSource and dataSourceRef:
                                                    * While dataSource only allows
                                                    two specific types of objects,
                                                    dataSourceRef allows any non-core
                                                    object, as well as PersistentVolumeClaim
                                                    objects. * While dataSource ignores
                                                    disallowed values (dropping them),
                                                    dataSourceRef preserves all values,
                                                    and generates an error if a disallowed
                                                    value is specified. * While dataSource
                                                    only allows local objects, dataSourceRef
                                                    allows objects in any namespaces.
                                                    (Beta) Using this field requires
                                                    the AnyVolumeDataSource feature
                                                    gate to be enabled. (Alpha) Using
                                                    the namespace field of dataSourceRef
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: Namespace is the
                                                        namespace of resource being
                                                        referenced Note that when
                                                        a namespace is specified,
                                                        a gateway.networking.k8s.io/ReferenceGrant
                                                        object is required in the
                                                        referent namespace to allow
                                                        that namespace's owner to
                                                        accept the reference. See
                                                        the ReferenceGrant documentation
                                                        for details. (Alpha) This
                                                        field requires the CrossNamespaceVolumeDataSource
                                                        feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: 'resources represents
                                                    the minimum resources the volume
                                                    should have. If RecoverVolumeExpansionFailure
                                                    feature is enabled users are allowed
                                                    to specify resource requirements
                                                    that are lower than previous value
                                                    but must still be higher than
                                                    capacity recorded in the status
                                                    field of the claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                  properties:
                                                    claims:
                                                      description: "Claims lists the
                                                        names of resources, defined
                                                        in spec.resourceClaims, that
                                                        are used by this container.
                                                        \n This is an alpha field
                                                        and requires enabling the
                                                        DynamicResourceAllocation
                                                        feature gate. \n This field
                                                        is immutable."
                                                      items:
                                                        description: ResourceClaim
                                                          references one entry in
                                                          PodSpec.ResourceClaims.
                                                        properties:
                                                          name:
                                                            description: Name must
                                                              match the name of one
                                                              entry in pod.spec.resourceClaims
                                                              of the Pod where this
                                                              field is used. It makes
                                                              that resource available
                                                              inside a container.
                                                            type: string
                                                        required:
                                                        - name
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-map-keys:
                                                      - name
                                                      x-kubernetes-list-type: map
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                storageClassName:
                                                  description: 'storageClassName is
                                                    the name of the StorageClass required
                                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                  type: string
                                                volumeMode:
                                                  description: volumeMode defines
                                                    what type of volume is required
                                                    by the claim. Value of Filesystem
                                                    is implied when not included in
                                                    claim spec.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. TODO: how do
                                            we prevent errors in the filesystem from
                                            compromising the machine'
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                        wwids:
                                          description: 'wwids Optional: FC volume
                                            world wide identifiers (wwids) Either
                                            wwids or combination of targetWWNs and
                                            lun must be set, but not both simultaneously.'
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    flexVolume:
                                      description: flexVolume represents a generic
                                        volume resource that is provisioned/attached
                                        using an exec based plugin.
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". The default filesystem
                                            depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: 'readOnly is Optional: defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is Optional: secretRef
                                            is reference to the secret object containing
                                            sensitive information to pass to the plugin
                                            scripts. This may be empty if no secret
                                            object is specified. If the secret object
                                            contains more than one secret, all secrets
                                            are passed to the plugin scripts.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: flocker represents a Flocker volume
                                        attached to a kubelet's host machine. This
                                        depends on the Flocker control service being
                                        running
                                      properties:
                                        datasetName:
                                          description: datasetName is Name of the
                                            dataset stored as metadata -> name on
                                            the dataset for Flocker should be considered
                                            as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: 'gcePersistentDisk represents a
                                        GCE Disk resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      properties:
                                        fsType:
                                          description: 'fsType is filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: 'pdName is unique name of the
                                            PD resource in GCE. Used to identify the
                                            disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: 'gitRepo represents a git repository
                                        at a particular revision. DEPRECATED: GitRepo
                                        is deprecated. To provision a container with
                                        a git repo, mount an EmptyDir into an InitContainer
                                        that clones the repo using git, then mount
                                        the EmptyDir into the Pod''s container.'
                                      properties:
                                        directory:
                                          description: directory is the target directory
                                            name. Must not contain or start with '..'.  If
                                            '.' is supplied, the volume directory
                                            will be the git repository.  Otherwise,
                                            if specified, the volume will contain
                                            the git repository in the subdirectory
                                            with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: 'glusterfs represents a Glusterfs
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                      properties:
                                        endpoints:
                                          description: 'endpoints is the endpoint
                                            name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'path is the Glusterfs volume
                                            path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            Glusterfs volume to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: 'hostPath represents a pre-existing
                                        file or directory on the host machine that
                                        is directly exposed to the container. This
                                        is generally used for system agents or other
                                        privileged things that are allowed to see
                                        the host machine. Most containers will NOT
                                        need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        --- TODO(jonesdl) We need to restrict who
                                        can use host directory mounts and who can/can
                                        not mount host directories as read/write.'
                                      properties:
                                        path:
                                          description: 'path of the directory on the
                                            host. If the path is a symlink, it will
                                            follow the link to the real path. More
                                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: 'type for HostPath Volume Defaults
                                            to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    iscsi:
                                      description: 'iscsi represents an ISCSI Disk
                                        resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        initiatorName:
                                          description: initiatorName is the custom
                                            iSCSI Initiator Name. If initiatorName
                                            is specified with iscsiInterface simultaneously,
                                            new iSCSI interface <target portal>:<volume
                                            name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          description: iscsiInterface is the interface
                                            Name that uses an iSCSI transport. Defaults
                                            to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: portals is the iSCSI Target
                                            Portal List. The portal is either an IP
                                            or ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                        readOnly:
                                          description: readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        targetPortal:
                                          description: targetPortal is iSCSI Target
                                            Portal. The Portal is either an IP or
                                            ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: 'nfs represents an NFS mount on
                                        the host that shares a pod''s lifetime More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      properties:
                                        path:
                                          description: 'path that is exported by the
                                            NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            NFS export to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'server is the hostname or
                                            IP address of the NFS server. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: 'persistentVolumeClaimVolumeSource
                                        represents a reference to a PersistentVolumeClaim
                                        in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      properties:
                                        claimName:
                                          description: 'claimName is the name of a
                                            PersistentVolumeClaim in the same namespace
                                            as the pod using this volume. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: readOnly Will force the ReadOnly
                                            setting in VolumeMounts. Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: photonPersistentDisk represents
                                        a PhotonController persistent disk attached
                                        and mounted on kubelets host machine
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: portworxVolume represents a portworx
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: fSType represents the filesystem
                                            type to mount Must be a filesystem type
                                            supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred
                                            to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    quobyte:
                                      description: quobyte represents a Quobyte mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        group:
                                          description: group to map volume access
                                            to Default is no group
                                          type: string
                                        readOnly:
                                          description: readOnly here will force the
                                            Quobyte volume to be mounted with read-only
                                            permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: registry represents a single
                                            or multiple Quobyte Registry services
                                            specified as a string as host:port pair
                                            (multiple entries are separated with commas)
                                            which acts as the central registry for
                                            volumes
                                          type: string
                                        tenant:
                                          description: tenant owning the given Quobyte
                                            volume in the Backend Used with dynamically
                                            provisioned Quobyte volumes, value is
                                            set by the plugin
                                          type: string
                                        user:
                                          description: user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: 'rbd represents a Rados Block Device
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        image:
                                          description: 'image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'keyring is the path to key
                                            ring for RBDUser. Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'monitors is a collection of
                                            Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        pool:
                                          description: 'pool is the rados pool name.
                                            Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is name of the authentication
                                            secret for RBDUser. If provided overrides
                                            keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: 'user is the rados user name.
                                            Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: scaleIO represents a ScaleIO persistent
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef references to the
                                            secret for ScaleIO user and other sensitive
                                            information. If this is not provided,
                                            Login operation will fail.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          description: storageMode indicates whether
                                            the storage for a volume should be ThickProvisioned
                                            or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: volumeName is the name of a
                                            volume already created in the ScaleIO
                                            system that is associated with this volume
                                            source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                    storageos:
                                      description: storageOS represents a StorageOS
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef specifies the secret
                                            to use for obtaining the StorageOS API
                                            credentials.  If not specified, default
                                            values will be attempted.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeName:
                                          description: volumeName is the human-readable
                                            name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: volumeNamespace specifies the
                                            scope of the volume within StorageOS.  If
                                            no namespace is specified then the Pod's
                                            namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored
                                            within StorageOS for tighter integration.
                                            Set VolumeName to any name to override
                                            the default behaviour. Set to "default"
                                            if you are not using namespaces within
                                            StorageOS. Namespaces that do not pre-exist
                                            within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: vsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: fsType is filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              httpPort:
                                description: Http port for ingress controller daemonset
                                type: integer
                              httpsPort:
                                description: Https port for ingress controller daemonset
                                type: integer
                              networkMode:
                                description: NetworkMode selector for ingress controller
                                  pods. Default is HostNetwork
                                type: string
                              nginxIngressControllerPriorityClassName:
                                description: Priority class name for Nginx-Ingress's
                                  "nginx-ingress-controller" daemonset
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector key pair
                                type: object
                              options:
                                additionalProperties:
                                  type: string
                                description: These options are NOT for configuring
                                  Ingress's addon template. They are used for its
                                  ConfigMap options specifically.
                                type: object
                              provider:
                                description: Ingress controller type used by kubernetes
                                type: string
                              tolerations:
                                description: Tolerations for Deployments
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              updateStrategy:
                                description: nginx daemonset upgrade strategy
                                properties:
                                  rollingUpdate:
                                    description: 'Rolling update config params. Present
                                      only if type = "RollingUpdate". --- TODO: Update
                                      this to follow our convention for oneOf, whatever
                                      we decide it to be. Same as Deployment `strategy.rollingUpdate`.
                                      See https://github.com/kubernetes/kubernetes/issues/35345'
                                    properties:
                                      maxSurge:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of nodes
                                          with an existing available DaemonSet pod
                                          that can have an updated DaemonSet pod during
                                          during an update. Value can be an absolute
                                          number (ex: 5) or a percentage of desired
                                          pods (ex: 10%). This can not be 0 if MaxUnavailable
                                          is 0. Absolute number is calculated from
                                          percentage by rounding up to a minimum of
                                          1. Default value is 0. Example: when this
                                          is set to 30%, at most 30% of the total
                                          number of nodes that should be running the
                                          daemon pod (i.e. status.desiredNumberScheduled)
                                          can have their a new pod created before
                                          the old pod is marked as deleted. The update
                                          starts by launching new pods on 30% of nodes.
                                          Once an updated pod is available (Ready
                                          for at least minReadySeconds) the old DaemonSet
                                          pod on that node is marked deleted. If the
                                          old pod becomes unavailable for any reason
                                          (Ready transitions to false, is evicted,
                                          or is drained) an updated pod is immediatedly
                                          created on that node without considering
                                          surge limits. Allowing surge implies the
                                          possibility that the resources consumed
                                          by the daemonset on any given node can double
                                          if the readiness check fails, and so resource
                                          intensive daemonsets should take into account
                                          that they may cause evictions during disruption.'
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of DaemonSet
                                          pods that can be unavailable during the
                                          update. Value can be an absolute number
                                          (ex: 5) or a percentage of total number
                                          of DaemonSet pods at the start of the update
                                          (ex: 10%). Absolute number is calculated
                                          from percentage by rounding up. This cannot
                                          be 0 if MaxSurge is 0 Default value is 1.
                                          Example: when this is set to 30%, at most
                                          30% of the total number of nodes that should
                                          be running the daemon pod (i.e. status.desiredNumberScheduled)
                                          can have their pods stopped for an update
                                          at any given time. The update starts by
                                          stopping at most 30% of those DaemonSet
                                          pods and then brings up new DaemonSet pods
                                          in their place. Once the new pods are available,
                                          it then proceeds onto other DaemonSet pods,
                                          thus ensuring that at least 70% of original
                                          number of DaemonSet pods are available at
                                          all times during the update.'
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  strategy:
                                    description: Type of daemon set update. Can be
                                      "RollingUpdate" or "OnDelete". Default is RollingUpdate.
                                    type: string
                                type: object
                            type: object
                          kubernetesVersion:
                            description: Kubernetes version to use (if kubernetes
                              image is specified, image version takes precedence)
                            type: string
                          monitoring:
                            description: Monitoring Config
                            properties:
                              metricsServerPriorityClassName:
                                description: Priority class name for Metrics-Server's
                                  "metrics-server" deployment
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector key pair
                                type: object
                              options:
                                additionalProperties:
                                  type: string
                                description: These options are NOT for configuring
                                  the Metrics-Server's addon template. They are used
                                  to pass command args to the metric-server's deployment
                                  containers specifically.
                                type: object
                              provider:
                                description: Monitoring server provider
                                type: string
                              replicas:
                                description: Number of monitoring addon pods
                                format: int32
                                type: integer
                              tolerations:
                                description: Tolerations for Deployments
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              updateStrategy:
                                description: Update strategy
                                properties:
                                  rollingUpdate:
                                    description: 'Rolling update config params. Present
                                      only if DeploymentStrategyType = RollingUpdate.
                                      --- TODO: Update this to follow our convention
                                      for oneOf, whatever we decide it to be.'
                                    properties:
                                      maxSurge:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of pods that
                                          can be scheduled above the desired number
                                          of pods. Value can be an absolute number
                                          (ex: 5) or a percentage of desired pods
                                          (ex: 10%). This can not be 0 if MaxUnavailable
                                          is 0. Absolute number is calculated from
                                          percentage by rounding up. Defaults to 25%.
                                          Example: when this is set to 30%, the new
                                          ReplicaSet can be scaled up immediately
                                          when the rolling update starts, such that
                                          the total number of old and new pods do
                                          not exceed 130% of desired pods. Once old
                                          pods have been killed, new ReplicaSet can
                                          be scaled up further, ensuring that total
                                          number of pods running at any time during
                                          the update is at most 130% of desired pods.'
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of pods that
                                          can be unavailable during the update. Value
                                          can be an absolute number (ex: 5) or a percentage
                                          of desired pods (ex: 10%). Absolute number
                                          is calculated from percentage by rounding
                                          down. This can not be 0 if MaxSurge is 0.
                                          Defaults to 25%. Example: when this is set
                                          to 30%, the old ReplicaSet can be scaled
                                          down to 70% of desired pods immediately
                                          when the rolling update starts. Once new
                                          pods are ready, old ReplicaSet can be scaled
                                          down further, followed by scaling up the
                                          new ReplicaSet, ensuring that the total
                                          number of pods available at all times during
                                          the update is at least 70% of desired pods.'
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  strategy:
                                    description: Type of deployment. Can be "Recreate"
                                      or "RollingUpdate". Default is RollingUpdate.
                                    type: string
                                type: object
                            type: object
                          network:
                            description: Network configuration used in the kubernetes
                              cluster (flannel, calico)
                            properties:
                              aciNetworkProvider:
                                description: AciNetworkProvider
                                properties:
                                  aep:
                                    type: string
                                  apicHosts:
                                    items:
                                      type: string
                                    type: array
                                  apicRefreshTickerAdjust:
                                    type: string
                                  apicRefreshTime:
                                    type: string
                                  apicSubscriptionDelay:
                                    type: string
                                  apicUserCrt:
                                    type: string
                                  apicUserKey:
                                    type: string
                                  apicUserName:
                                    type: string
                                  capic:
                                    type: string
                                  controllerLogLevel:
                                    type: string
                                  disablePeriodicSnatGlobalInfoSync:
                                    type: string
                                  disableWaitForNetwork:
                                    type: string
                                  dropLogEnable:
                                    type: string
                                  durationWaitForNetwork:
                                    type: string
                                  enableEndpointSlice:
                                    type: string
                                  encapType:
                                    type: string
                                  epRegistry:
                                    type: string
                                  externDynamic:
                                    type: string
                                  externStatic:
                                    type: string
                                  gbpPodSubnet:
                                    type: string
                                  hostAgentLogLevel:
                                    type: string
                                  imagePullPolicy:
                                    type: string
                                  imagePullSecret:
                                    type: string
                                  infraVlan:
                                    type: string
                                  installIstio:
                                    type: string
                                  istioProfile:
                                    type: string
                                  kafkaBrokers:
                                    items:
                                      type: string
                                    type: array
                                  kafkaClientCrt:
                                    type: string
                                  kafkaClientKey:
                                    type: string
                                  kubeApiVlan:
                                    type: string
                                  l3out:
                                    type: string
                                  l3outExternalNetworks:
                                    items:
                                      type: string
                                    type: array
                                  maxNodesSvcGraph:
                                    type: string
                                  mcastRangeEnd:
                                    type: string
                                  mcastRangeStart:
                                    type: string
                                  mtuHeadRoom:
                                    type: string
                                  multusDisable:
                                    type: string
                                  noPriorityClass:
                                    type: string
                                  nodePodIfEnable:
                                    type: string
                                  nodeSubnet:
                                    type: string
                                  nodeSvcSubnet:
                                    type: string
                                  opflexClientSsl:
                                    type: string
                                  opflexDeviceDeleteTimeout:
                                    type: string
                                  opflexLogLevel:
                                    type: string
                                  opflexMode:
                                    type: string
                                  opflexServerPort:
                                    type: string
                                  overlayVrfName:
                                    type: string
                                  ovsMemoryLimit:
                                    type: string
                                  pbrTrackingNonSnat:
                                    type: string
                                  podSubnetChunkSize:
                                    type: string
                                  runGbpContainer:
                                    type: string
                                  runOpflexServerContainer:
                                    type: string
                                  serviceMonitorInterval:
                                    type: string
                                  serviceVlan:
                                    type: string
                                  snatContractScope:
                                    type: string
                                  snatNamespace:
                                    type: string
                                  snatPortRangeEnd:
                                    type: string
                                  snatPortRangeStart:
                                    type: string
                                  snatPortsPerNode:
                                    type: string
                                  sriovEnable:
                                    type: string
                                  subnetDomainName:
                                    type: string
                                  systemId:
                                    type: string
                                  tenant:
                                    type: string
                                  token:
                                    type: string
                                  useAciAnywhereCrd:
                                    type: string
                                  useAciCniPriorityClass:
                                    type: string
                                  useClusterRole:
                                    type: string
                                  useHostNetnsVolume:
                                    type: string
                                  useOpflexServerVolume:
                                    type: string
                                  usePrivilegedContainer:
                                    type: string
                                  vmmController:
                                    type: string
                                  vmmDomain:
                                    type: string
                                  vrfName:
                                    type: string
                                  vrfTenant:
                                    type: string
                                type: object
                              calicoNetworkProvider:
                                description: CalicoNetworkProvider
                                properties:
                                  cloudProvider:
                                    description: Cloud provider type used with calico
                                    type: string
                                required:
                                - cloudProvider
                                type: object
                              canalNetworkProvider:
                                description: CanalNetworkProvider
                                properties:
                                  iface:
                                    description: Alternate cloud interface for flannel
                                    type: string
                                required:
                                - iface
                                type: object
                              flannelNetworkProvider:
                                description: FlannelNetworkProvider
                                properties:
                                  iface:
                                    description: Alternate cloud interface for flannel
                                    type: string
                                required:
                                - iface
                                type: object
                              mtu:
                                description: Set MTU for CNI provider
                                type: integer
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector key pair
                                type: object
                              options:
                                additionalProperties:
                                  type: string
                                description: Plugin options to configure network properties
                                type: object
                              plugin:
                                description: Network Plugin That will be used in kubernetes
                                  cluster
                                type: string
                              tolerations:
                                description: Tolerations for Deployments
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              updateStrategy:
                                description: Network plugin daemonset upgrade strategy
                                properties:
                                  rollingUpdate:
                                    description: 'Rolling update config params. Present
                                      only if type = "RollingUpdate". --- TODO: Update
                                      this to follow our convention for oneOf, whatever
                                      we decide it to be. Same as Deployment `strategy.rollingUpdate`.
                                      See https://github.com/kubernetes/kubernetes/issues/35345'
                                    properties:
                                      maxSurge:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of nodes
                                          with an existing available DaemonSet pod
                                          that can have an updated DaemonSet pod during
                                          during an update. Value can be an absolute
                                          number (ex: 5) or a percentage of desired
                                          pods (ex: 10%). This can not be 0 if MaxUnavailable
                                          is 0. Absolute number is calculated from
                                          percentage by rounding up to a minimum of
                                          1. Default value is 0. Example: when this
                                          is set to 30%, at most 30% of the total
                                          number of nodes that should be running the
                                          daemon pod (i.e. status.desiredNumberScheduled)
                                          can have their a new pod created before
                                          the old pod is marked as deleted. The update
                                          starts by launching new pods on 30% of nodes.
                                          Once an updated pod is available (Ready
                                          for at least minReadySeconds) the old DaemonSet
                                          pod on that node is marked deleted. If the
                                          old pod becomes unavailable for any reason
                                          (Ready transitions to false, is evicted,
                                          or is drained) an updated pod is immediatedly
                                          created on that node without considering
                                          surge limits. Allowing surge implies the
                                          possibility that the resources consumed
                                          by the daemonset on any given node can double
                                          if the readiness check fails, and so resource
                                          intensive daemonsets should take into account
                                          that they may cause evictions during disruption.'
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'The maximum number of DaemonSet
                                          pods that can be unavailable during the
                                          update. Value can be an absolute number
                                          (ex: 5) or a percentage of total number
                                          of DaemonSet pods at the start of the update
                                          (ex: 10%). Absolute number is calculated
                                          from percentage by rounding up. This cannot
                                          be 0 if MaxSurge is 0 Default value is 1.
                                          Example: when this is set to 30%, at most
                                          30% of the total number of nodes that should
                                          be running the daemon pod (i.e. status.desiredNumberScheduled)
                                          can have their pods stopped for an update
                                          at any given time. The update starts by
                                          stopping at most 30% of those DaemonSet
                                          pods and then brings up new DaemonSet pods
                                          in their place. Once the new pods are available,
                                          it then proceeds onto other DaemonSet pods,
                                          thus ensuring that at least 70% of original
                                          number of DaemonSet pods are available at
                                          all times during the update.'
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  strategy:
                                    description: Type of daemon set update. Can be
                                      "RollingUpdate" or "OnDelete". Default is RollingUpdate.
                                    type: string
                                type: object
                              weaveNetworkProvider:
                                description: WeaveNetworkProvider
                                properties:
                                  password:
                                    type: string
                                type: object
                            type: object
                          nodes:
                            description: Kubernetes nodes
                            items:
                              properties:
                                address:
                                  description: IP or FQDN that is fully resolvable
                                    and used for SSH communication
                                  type: string
                                dockerSocket:
                                  description: Optional - Docker socket on the node
                                    that will be used in tunneling
                                  type: string
                                hostnameOverride:
                                  description: Optional - Hostname of the node
                                  type: string
                                internalAddress:
                                  description: Optional - Internal address that will
                                    be used for components communication
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Node Labels
                                  type: object
                                nodeName:
                                  description: Name of the host provisioned via docker
                                    machine
                                  type: string
                                port:
                                  description: Port used for SSH communication
                                  type: string
                                role:
                                  description: Node role in kubernetes cluster (controlplane,
                                    worker, or etcd)
                                  items:
                                    type: string
                                  type: array
                                sshAgentAuth:
                                  description: SSH Agent Auth enable
                                  type: boolean
                                sshCert:
                                  description: SSH Certificate
                                  type: string
                                sshCertPath:
                                  description: SSH Certificate Path
                                  type: string
                                sshKey:
                                  description: SSH Private Key
                                  type: string
                                sshKeyPath:
                                  description: SSH Private Key Path
                                  type: string
                                taints:
                                  description: Node Taints
                                  items:
                                    properties:
                                      effect:
                                        type: string
                                      key:
                                        type: string
                                      timeAdded:
                                        format: date-time
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                user:
                                  description: SSH usesr that will be used by RKE
                                  type: string
                              type: object
                            type: array
                          prefixPath:
                            description: kubernetes directory path
                            type: string
                          privateRegistries:
                            description: List of private registries and their credentials
                            items:
                              properties:
                                ecrCredentialPlugin:
                                  description: ECRCredentialPlugin
                                  properties:
                                    awsAccessKeyId:
                                      type: string
                                    awsAccessToken:
                                      type: string
                                    awsSecretAccessKey:
                                      type: string
                                  type: object
                                isDefault:
                                  description: Default registry
                                  type: boolean
                                password:
                                  description: Password for registry access
                                  type: string
                                url:
                                  description: URL for the registry
                                  type: string
                                user:
                                  description: User name for registry acces
                                  type: string
                              type: object
                            type: array
                          restore:
                            description: RestoreCluster flag
                            properties:
                              restore:
                                type: boolean
                              snapshotName:
                                type: string
                            type: object
                          rotateCertificates:
                            description: Rotating Certificates Option
                            properties:
                              caCertificates:
                                description: Rotate CA Certificates
                                type: boolean
                              services:
                                description: Services to rotate their certs
                                items:
                                  type: string
                                type: array
                            type: object
                          rotateEncryptionKey:
                            description: Rotate Encryption Key Option
                            type: boolean
                          services:
                            description: Kubernetes components
                            properties:
                              etcd:
                                description: Etcd Service
                                properties:
                                  backupConfig:
                                    description: Backup backend for etcd snapshots
                                    properties:
                                      enabled:
                                        description: Enable or disable recurring backups
                                          in rancher
                                        type: boolean
                                      intervalHours:
                                        description: Backup interval in hours
                                        type: integer
                                      retention:
                                        description: Number of backups to keep
                                        type: integer
                                      s3BackupConfig:
                                        description: s3 target
                                        properties:
                                          accessKey:
                                            description: Access key ID
                                            type: string
                                          bucketName:
                                            description: name of the bucket to use
                                              for backup
                                            type: string
                                          customCa:
                                            description: CustomCA is used to connect
                                              to custom s3 endpoints
                                            type: string
                                          endpoint:
                                            description: Endpoint is used if this
                                              is not an AWS API
                                            type: string
                                          folder:
                                            description: Folder to place the files
                                            type: string
                                          region:
                                            description: AWS Region, AWS spcific
                                            type: string
                                          secretKey:
                                            description: Secret access key
                                            type: string
                                        required:
                                        - endpoint
                                        type: object
                                      safeTimestamp:
                                        description: replace special characters in
                                          snapshot names
                                        type: boolean
                                      timeout:
                                        description: Backup execution timeout
                                        type: integer
                                    type: object
                                  caCert:
                                    description: External CA certificate
                                    type: string
                                  cert:
                                    description: External Client certificate
                                    type: string
                                  creation:
                                    description: Etcd snapshot Creation period
                                    type: string
                                  externalUrls:
                                    description: List of etcd urls
                                    items:
                                      type: string
                                    type: array
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  gid:
                                    description: GID to run etcd container as
                                    type: integer
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  key:
                                    description: External Client key
                                    type: string
                                  path:
                                    description: External etcd prefix
                                    type: string
                                  retention:
                                    description: Etcd snapshot Retention period
                                    type: string
                                  snapshot:
                                    description: Etcd Recurring snapshot Service,
                                      used by rke only
                                    type: boolean
                                  uid:
                                    description: UID to run etcd container as
                                    type: integer
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                              kubeApi:
                                description: KubeAPI Service
                                properties:
                                  alwaysPullImages:
                                    description: Enable/Disable AlwaysPullImages admissions
                                      plugin
                                    type: boolean
                                  auditLog:
                                    description: Audit Log Configuration
                                    properties:
                                      configuration:
                                        properties:
                                          format:
                                            type: string
                                          maxAge:
                                            type: integer
                                          maxBackup:
                                            type: integer
                                          maxSize:
                                            type: integer
                                          path:
                                            type: string
                                        type: object
                                      enabled:
                                        type: boolean
                                    type: object
                                  eventRateLimit:
                                    description: Event Rate Limit configuration
                                    properties:
                                      configuration:
                                        properties:
                                          apiVersion:
                                            description: 'APIVersion defines the versioned
                                              schema of this representation of an
                                              object. Servers should convert recognized
                                              schemas to the latest internal value,
                                              and may reject unrecognized values.
                                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                            type: string
                                          kind:
                                            description: 'Kind is a string value representing
                                              the REST resource this object represents.
                                              Servers may infer this from the endpoint
                                              the client submits requests to. Cannot
                                              be updated. In CamelCase. More info:
                                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                            type: string
                                          limits:
                                            description: limits are the limits to
                                              place on event queries received. Limits
                                              can be placed on events received server-wide,
                                              per namespace, per user, and per source+object.
                                              At least one limit is required.
                                            items:
                                              description: Limit is the configuration
                                                for a particular limit type
                                              properties:
                                                burst:
                                                  description: burst is the burst
                                                    number of event queries that are
                                                    allowed for this type of limit.
                                                    The qps and burst fields are used
                                                    together to determine if a particular
                                                    event query is accepted. The burst
                                                    determines the maximum size of
                                                    the allowance granted for a particular
                                                    bucket. For example, if the burst
                                                    is 10 and the qps is 3, then the
                                                    admission control will accept
                                                    10 queries before blocking any
                                                    queries. Every second, 3 more
                                                    queries will be allowed. If some
                                                    of that allowance is not used,
                                                    then it will roll over to the
                                                    next second, until the maximum
                                                    allowance of 10 is reached.
                                                  format: int32
                                                  type: integer
                                                cacheSize:
                                                  description: "cacheSize is the size
                                                    of the LRU cache for this type
                                                    of limit. If a bucket is evicted
                                                    from the cache, then the allowance
                                                    for that bucket is reset. If more
                                                    queries are later received for
                                                    an evicted bucket, then that bucket
                                                    will re-enter the cache with a
                                                    clean slate, giving that bucket
                                                    a full allowance of burst queries.
                                                    \n The default cache size is 4096.
                                                    \n If limitType is 'server', then
                                                    cacheSize is ignored."
                                                  format: int32
                                                  type: integer
                                                qps:
                                                  description: qps is the number of
                                                    event queries per second that
                                                    are allowed for this type of limit.
                                                    The qps and burst fields are used
                                                    together to determine if a particular
                                                    event query is accepted. The qps
                                                    determines how many queries are
                                                    accepted once the burst amount
                                                    of queries has been exhausted.
                                                  format: int32
                                                  type: integer
                                                type:
                                                  description: type is the type of
                                                    limit to which this configuration
                                                    applies
                                                  type: string
                                              required:
                                              - burst
                                              - qps
                                              - type
                                              type: object
                                            type: array
                                        required:
                                        - limits
                                        type: object
                                      enabled:
                                        type: boolean
                                    type: object
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  podSecurityPolicy:
                                    description: Enabled/Disable PodSecurityPolicy
                                    type: boolean
                                  secretsEncryptionConfig:
                                    description: Secrets encryption provider config
                                    properties:
                                      enabled:
                                        description: Enable/disable secrets encryption
                                          provider config
                                        type: boolean
                                    type: object
                                  serviceClusterIpRange:
                                    description: Virtual IP range that will be used
                                      by Kubernetes services
                                    type: string
                                  serviceNodePortRange:
                                    description: Port range for services defined with
                                      NodePort type
                                    type: string
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                              kubeController:
                                description: KubeController Service
                                properties:
                                  clusterCidr:
                                    description: CIDR Range for Pods in cluster
                                    type: string
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  serviceClusterIpRange:
                                    description: Virtual IP range that will be used
                                      by Kubernetes services
                                    type: string
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                              kubelet:
                                description: Kubelet Service
                                properties:
                                  clusterDnsServer:
                                    description: Cluster DNS service ip
                                    type: string
                                  clusterDomain:
                                    description: 'Domain of the cluster (default:
                                      "cluster.local")'
                                    type: string
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  failSwapOn:
                                    description: Fail if swap is enabled
                                    type: boolean
                                  generateServingCertificate:
                                    description: Generate per node kubelet serving
                                      certificates created using kube-ca
                                    type: boolean
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  infraContainerImage:
                                    description: The image whose network/ipc namespaces
                                      containers in each pod will use
                                    type: string
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                              kubeproxy:
                                description: KubeProxy Service
                                properties:
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                              scheduler:
                                description: Scheduler Service
                                properties:
                                  extraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Extra arguments that are added to
                                      the services
                                    type: object
                                  extraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  extraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  extraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                  image:
                                    description: Docker image of the service
                                    type: string
                                  winExtraArgs:
                                    additionalProperties:
                                      type: string
                                    description: Windows nodes only of the same as
                                      the above Extra arguments that are added to
                                      the services
                                    type: object
                                  winExtraArgsArray:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Extra arguments that can be specified
                                      multiple times which are added to the services
                                    type: object
                                  winExtraBinds:
                                    description: Extra binds added to the nodes
                                    items:
                                      type: string
                                    type: array
                                  winExtraEnv:
                                    description: this is to provide extra env variable
                                      to the docker container running kubernetes service
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          sshAgentAuth:
                            description: SSH Agent Auth enable
                            type: boolean
                          sshCertPath:
                            description: SSH Certificate Path
                            type: string
                          sshKeyPath:
                            description: SSH Private Key Path
                            type: string
                          systemImages:
                            description: List of images used internally for proxy,
                              cert download and kubedns
                            properties:
                              aciCniDeployContainer:
                                description: Cni deployer container image for Cisco
                                  ACI
                                type: string
                              aciControllerContainer:
                                description: Controller container image for Cisco
                                  ACI
                                type: string
                              aciGbpServerContainer:
                                description: GBP Server container image for Cisco
                                  ACI
                                type: string
                              aciHostContainer:
                                description: host container image for Cisco ACI
                                type: string
                              aciMcastContainer:
                                description: mcast daemon container image for Cisco
                                  ACI
                                type: string
                              aciOpflexContainer:
                                description: opflex agent container image for Cisco
                                  ACI
                                type: string
                              aciOpflexServerContainer:
                                description: Opflex Server container image for Cisco
                                  ACI
                                type: string
                              aciOvsContainer:
                                description: OpenvSwitch container image for Cisco
                                  ACI
                                type: string
                              alpine:
                                description: Alpine image
                                type: string
                              calicoCni:
                                description: Calico CNI image
                                type: string
                              calicoControllers:
                                description: Calico Controllers image
                                type: string
                              calicoCtl:
                                description: Calicoctl image
                                type: string
                              calicoFlexVol:
                                description: CalicoFlexVol image
                                type: string
                              calicoNode:
                                description: Calico Node image
                                type: string
                              canalCni:
                                description: Canal CNI image
                                type: string
                              canalControllers:
                                description: Canal Controllers Image needed for Calico/Canal
                                  v3.14.0+
                                type: string
                              canalFlannel:
                                description: CanalFlannel image
                                type: string
                              canalFlexVol:
                                description: CanalFlexVol image
                                type: string
                              canalNode:
                                description: Canal Node Image
                                type: string
                              certDownloader:
                                description: rke-cert-deployer image
                                type: string
                              coredns:
                                description: CoreDNS image
                                type: string
                              corednsAutoscaler:
                                description: CoreDNS autoscaler image
                                type: string
                              dnsmasq:
                                description: DNSMasq image
                                type: string
                              etcd:
                                description: etcd image
                                type: string
                              flannel:
                                description: Flannel image
                                type: string
                              flannelCni:
                                description: Flannel CNI image
                                type: string
                              ingress:
                                description: Ingress Controller image
                                type: string
                              ingressBackend:
                                description: Ingress Controller Backend image
                                type: string
                              ingressWebhook:
                                description: Ingress Webhook image
                                type: string
                              kubedns:
                                description: KubeDNS image
                                type: string
                              kubednsAutoscaler:
                                description: KubeDNS autoscaler image
                                type: string
                              kubednsSidecar:
                                description: KubeDNS side car image
                                type: string
                              kubernetes:
                                description: Kubernetes image
                                type: string
                              kubernetesServicesSidecar:
                                description: rke-service-sidekick image
                                type: string
                              metricsServer:
                                description: Metrics Server image
                                type: string
                              nginxProxy:
                                description: rke-nginx-proxy image
                                type: string
                              nodelocal:
                                description: Nodelocal image
                                type: string
                              podInfraContainer:
                                description: Pod infra container image
                                type: string
                              weaveCni:
                                description: Weave CNI image
                                type: string
                              weaveNode:
                                description: Weave Node image
                                type: string
                              windowsPodInfraContainer:
                                description: Pod infra container image for Windows
                                type: string
                            type: object
                          upgradeStrategy:
                            description: Upgrade Strategy for the cluster
                            properties:
                              drain:
                                type: boolean
                              maxUnavailableControlplane:
                                description: MaxUnavailableControlplane input can
                                  be a number of nodes or a percentage of nodes
                                type: string
                              maxUnavailableWorker:
                                description: 'MaxUnavailableWorker input can be a
                                  number of nodes or a percentage of nodes (example,
                                  max_unavailable_worker: 2 OR max_unavailable_worker:
                                  20%)'
                                type: string
                              nodeDrainInput:
                                properties:
                                  deleteLocalData:
                                    description: Continue even if there are pods using
                                      emptyDir
                                    type: boolean
                                  force:
                                    description: Drain node even if there are pods
                                      not managed by a ReplicationController, Job,
                                      or DaemonSet Drain will not proceed without
                                      Force set to true if there are such pods
                                    type: boolean
                                  gracePeriod:
                                    description: Period of time in seconds given to
                                      each pod to terminate gracefully. If negative,
                                      the default value specified in the pod will
                                      be used
                                    type: integer
                                  ignoreDaemonSets:
                                    description: If there are DaemonSet-managed pods,
                                      drain will not proceed without IgnoreDaemonSets
                                      set to true (even when set to true, kubectl
                                      won't delete pods - so setting default to true)
                                    type: boolean
                                  timeout:
                                    description: Time to wait (in seconds) before
                                      giving up for one try
                                    type: integer
                                required:
                                - timeout
                                type: object
                            type: object
                          winPrefixPath:
                            description: kubernetes directory path for windows
                            type: string
                        required:
                        - enableCriDockerd
                        - ignoreDockerVersion
                        - rotateEncryptionKey
                        - sshAgentAuth
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ClusterStatus represents the observed state of a Cluster.
            properties:
              atProvider:
                description: ClusterObservation are the observable fields of a Cluster.
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
